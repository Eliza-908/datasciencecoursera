x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
cbind(x,y)
x <- 4
class(x)
x <-c(4, TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
x <- list(2,"a","b",TRUE)
x[[1]]
x <-1:4
y <- 2:3
x + y
install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")
library(swirl)
ls
ls()
rm(list=ls())
swirl()
5+7
x <- 5+7
x
y <- x-3
y
c(1.1, 9, 3.14)
z -> c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z *2 +100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z *2 +1000
my_div
0
swirl()
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
old.dir <- dir()
old.dir <- getwd()
dir.create(testdir)
?dir.create
testdir <- dir.create()
dir.create('testdir')
setwd(testdir)
setwd('testdir')
file.create('mytest.R')
ls()
list.files()
file.exists('mytest.R')
file.info('mytest.R')
file.rename('mytest.R','mytest2.R')
file.copy('mytest2.R','mytest3.R', overwrite=recursive, recursive = F)
file.copy('mytest2.R','mytest3.R')
file.path('mytest3.R')
file.path('folder1')
file.path('folder1', 'folder2')
?dir.create
dir.create('testdir2')
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink('testdir2', recursive = TRUE)
setwd('old.dir')
setwd('olddir')
setwd(old.dir)
unlink('testdir', recursive = TRUE)
1:20
pi:10
15:1
?`:`
se1(1,20)
seq(1,20)
seq(0,10,.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect <- c(.5,55,-10,6)
tf <- num_vect[<1]
tf <- num_vect[1]
tf <- num_vect <1
tf
num_vect >= 6
my_char("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Eliza")
my_name <- c(my_char, "Eliza")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
add2 <- function(x,y) {
x+y
}
add2(3,5)
above <- function(z,n) {
use <- x > n
x[use]
}
above(20,6)
x<-1:20
above(x,6)
above <- function(z,n = 10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
y~x
?`~`
install.packages('ggplot2')
library(ggplot2)
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
x <- 1:10
if(x>5) {
x <- 0
}
z <- 10
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
y <- if(x < 3) {
NA
} else {
10
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
library(datasets)
data("iris")
?iris
mean(iris[Sepal.length])
mean(iris[1,])
clear
swirl()
libary(swirl)
library(swirl)
rm(list=ls())
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[30000]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect("bar")
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients = c("Bill","Gina","Kelly","Sean")
patients = c("Bill","Gina","Kelly","Sean")
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 <7
10 <= 10
5 != 7
5 == !7
5 != 7
!5 == !7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8
| || 6 != 8 && 4 > 3.9
5 > 8 5 > 8|| 6 != 8 && 4 > 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 ==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints <0)
all(ints >0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){c[1]}, c(8,4,0))
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Hey there!")
submit()
mad_libs("London", "nice", "house")
submit()
"I" %p% 'love' %p% 'R!'
?list.files
source('~/datasciencecoursera/pollutantmean.R')
source('~/datasciencecoursera/pollutantmean.R')
?read.csv
?read.delim
?head
source('~/datasciencecoursera/pollutantmean.R')
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
getwd(0)
getwd()
setwd("~/datasciencecoursera")
pollutantmean("specdata", "sulfate", 1:10)
source(pollutantmean.R)
ls()
source('pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10))
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
?rep
?complete.cases
source('~/datasciencecoursera/complete.R')
complete("specdata", 1)
source('~/datasciencecoursera/complete.R')
complete("specdata", 1)
complete("specdata", 1)
complete("specdata", 1)
path <- paste(directory, files, sep = "")
complete("specdata", 1)
source('~/datasciencecoursera/complete.R')
source('~/datasciencecoursera/complete.R')
complete("specdata", 1)
source('~/datasciencecoursera/complete.R')
complete("specdata", 1)
complete("specdata", 1)
complete("specdata", 1)
source('~/datasciencecoursera/complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
?cor
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata, 150")
cr <- corr("specdata, 150")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source('~/datasciencecoursera/corr.R')
source('~/datasciencecoursera/complete.R')
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 150)
head(cr)
source('~/datasciencecoursera/corr.R')
source('~/datasciencecoursera/complete.R')
source('~/datasciencecoursera/corr.R')
source('~/datasciencecoursera/complete.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
summary(cr)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R"
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R"
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
print("hello")
